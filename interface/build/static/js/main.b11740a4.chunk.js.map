{"version":3,"sources":["services/api.js","pages/home/index.js","components/backBtn/index.js","pages/medicalLogin/index.js","pages/medicalArea/index.js","pages/schedule/index.js","pages/default/index.js","routes.js","App.js","serviceWorker.js","index.js","images/icon.png","images/user.png"],"names":["api","axios","create","baseURL","Home","login","_callee","user","pass","response","regenerator_default","a","wrap","_context","prev","next","document","querySelector","post","value","sent","data","localStorage","setItem","_this","forceUpdate","stop","logout","removeItem","userLogged","getItem","react_default","createElement","className","src","logo","alt","react_router_dom","to","onClick","this","id","placeholder","Component","BackBtn","_ref","path","text","MedicalLogIn","log","e","medicalNumber","password","preventDefault","getElementById","get","concat","JSON","stringify","props","history","push","checkLogin","_this2","backBtn","onSubmit","forhtml","type","autoComplete","required","Header","List","goSchedule","hsn","hist","_this$props$estado","estado","patients","search","exists","page","productInfo","load","react_loader_spinner_default","color","height","width","map","patient","key","_id","firstName","lastName","docName","disabled","docNum","parse","pages","total","limit","Modal","state","username","boxNum","success","erro","formSubmit","_response","_this3","isNaN","match","name","setTimeout","close","_this4","minLength","maxLength","onChange","setState","target","MedicalArea","new","interval","loadPatients","_callee2","_response$data","docs","_args2","arguments","_context2","length","undefined","Object","objectWithoutProperties","_this5","prevPage","pageNumber","nextPage","_this5$state","_callee3","inputField","_response$data2","_context3","alert","switchModal","prevState","clearInterval","handleKeyDown","setInterval","_this6","medicalArea_Header","lib","_ref4","style","onKeyDown","medicalArea_Modal","medicalArea_List","options","label","Table","saving","qnt","medication","hour","meds","medList","medicamentos","hours","getMeds","list","index","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","line","column","Symbol","iterator","done","t0","return","finish","getValuesMedSelect","newValue","change","i","_i","_i2","substring","charCodeAt","option","indexOf","splice","keys","assign","put","delete","getValuesHourSelect","querySelectorAll","textContent","disable","letter","number","selectMeds","exs","col","createRow","row","_loop","selected","react_select_browser_esm","isClearable","isMulti","activateLoad","Info","nome","sex","age","info","getInfo","_callee4","PatientsResponse","_PatientsResponse$dat","SchedulesResponse","_context4","updateState","updateInfo","_callee5","_context5","User","Schedule","schedule_Table","schedule_Info","Default","class","Routes","es6","react_router","exact","component","App","routes","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"kSAIeA,SAFHC,EAAMC,OAAO,CAAEC,QAAS,wECKfC,6MACjBC,2BAAQ,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACAR,EAAOS,SAASC,cAAc,SAC9BT,EAAOQ,SAASC,cAAc,SAF9BJ,EAAAE,KAAA,EAGmBf,EAAIkB,KAAK,gBAAiB,CAACX,KAAMA,EAAKY,MAAOX,KAAMA,EAAKW,QAH3E,OAGEV,EAHFI,EAAAO,KAIJb,EAAKY,MAAM,GACXX,EAAKW,MAAM,GACQ,KAAhBV,EAASY,MAAWC,aAAaC,QAAQ,aAAc,UAC1DC,EAAKC,cAPD,wBAAAZ,EAAAa,SAAApB,QAURqB,OAAS,WACLL,aAAaM,WAAW,cACxBJ,EAAKC,uFAIL,IAAMI,EAAaP,aAAaQ,QAAQ,cACxC,OACIC,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,QACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,eACXF,EAAApB,EAAAqB,cAAA,OAAKE,IAAKC,IAAMC,IAAI,gBACpBL,EAAApB,EAAAqB,cAAA,iCAEJD,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,cACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,yBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,mBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,iBACXF,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,gBAAb,uBAEJF,EAAApB,EAAAqB,cAAA,MAAIC,UAAU,+BACVF,EAAApB,EAAAqB,cAAA,UACID,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,WAAUF,EAAApB,EAAAqB,cAACK,EAAA,EAAD,CAAMC,GAAG,GAAGL,UAAU,UAAtB,cAC5BF,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,WAAUF,EAAApB,EAAAqB,cAACK,EAAA,EAAD,CAAMC,GAAG,gBAAgBL,UAAU,UAAnC,sBACd,WAAbJ,EACIE,EAAApB,EAAAqB,cAAA,YACGD,EAAApB,EAAAqB,cAAA,UAAQO,QAASC,KAAKb,OAAQc,GAAG,SAAjC,WAEHV,EAAApB,EAAAqB,cAAA,YACGD,EAAApB,EAAAqB,cAAA,SAAOU,YAAY,WAAWD,GAAG,SACjCV,EAAApB,EAAAqB,cAAA,SAAOU,YAAY,WAAWD,GAAG,SACjCV,EAAApB,EAAAqB,cAAA,UAAQO,QAASC,KAAKnC,MAAOoC,GAAG,SAAhC,uBAzCVE,aCKnBC,SARC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAOC,EAAVF,EAAUE,KAAV,OACZhB,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,qBACZF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,qBACVF,EAAApB,EAAAqB,cAACK,EAAA,EAAD,CAAMC,GAAIQ,EAAMb,UAAU,WAAUF,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,4BAAjD,IAAiFc,OCDxEC,oNACjBC,0CAAM,SAAA3C,EAAO4C,GAAP,IAAAC,EAAAC,EAAA3C,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACFmC,EAAEG,iBAEIF,EAAgBnC,SAASsC,eAAe,MAAMnC,MAC9CiC,EAAWpC,SAASsC,eAAe,MAAMnC,MAC/CH,SAASsC,eAAe,MAAMnC,MAAQ,GACtCH,SAASsC,eAAe,MAAMnC,MAAQ,GANpCN,EAAAE,KAAA,EAQqBf,EAAIuD,IAAJ,YAAAC,OAAoBL,IARzC,OAUkB,OAFd1C,EARJI,EAAAO,MAUUC,MACLZ,EAASY,KAAK+B,WAAaA,IAC1B9B,aAAaC,QAAQ,gBAAgB,UACrCD,aAAaC,QAAQ,UAAWkC,KAAKC,UAAUP,IAC/C3B,EAAKmC,MAAMC,QAAQC,KAAK,iBAd9B,wBAAAhD,EAAAa,SAAApB,8DAmBNwD,WAAa,WAEU,WADGxC,aAAaQ,QAAQ,kBACdN,EAAKmC,MAAMC,QAAQC,KAAK,yFAGjD,IAAAE,EAAAvB,KAGJ,OAFAA,KAAKsB,aAGD/B,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,iBACXF,EAAApB,EAAAqB,cAACgC,EAAD,CAASlB,KAAK,IAAIC,KAAK,sBACvBhB,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,kBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,aACXF,EAAApB,EAAAqB,cAAA,+BACAD,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,eAAegC,SAAU,SAAAf,GAAC,OAAIa,EAAKd,IAAIC,KACnDnB,EAAApB,EAAAqB,cAAA,SAAOkC,QAAQ,MAAf,oBACAnC,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,KAAK0B,KAAK,OAAOzB,YAAY,gBAAgB0B,aAAa,KAAKC,UAAQ,IACjFtC,EAAApB,EAAAqB,cAAA,SAAOkC,QAAQ,MAAf,YACAnC,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,KAAK0B,KAAK,WAAWzB,YAAY,WAAW0B,aAAa,KAAKC,UAAQ,IAChFtC,EAAApB,EAAAqB,cAAA,UAAQmC,KAAK,UAAb,WAA8BpC,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,2CAvChCU,+CCEpC2B,0LAEE,OACIvC,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,UACXF,EAAApB,EAAAqB,cAAA,UAAID,EAAApB,EAAAqB,cAAA,OAAKE,IAAKC,IAAMC,IAAI,gBAAxB,8BAJKO,cAUf4B,6MAEFC,WAAa,SAACC,GACVnD,aAAaC,QAAQ,MAAOkC,KAAKC,UAAUe,IAC3CjD,EAAKmC,MAAMe,KAAKb,KAAK,mGAGhB,IAAAE,EAAAvB,KAAAmC,EACuDnC,KAAKmB,MAAMiB,OAAhEC,EADFF,EACEE,SAAUC,EADZH,EACYG,OAAQC,EADpBJ,EACoBI,OAAQC,EAD5BL,EAC4BK,KAAMC,EADlCN,EACkCM,YAAaC,EAD/CP,EAC+CO,KAEpD,OACInD,EAAApB,EAAAqB,cAAA,OAAKC,UAAY,gBACbF,EAAApB,EAAAqB,cAAA,uBACCkD,EAAKnD,EAAApB,EAAAqB,cAACmD,EAAAxE,EAAD,CAAQwD,KAAK,YAAYiB,MAAM,QAAOC,OAAO,KAAKC,MAAM,OAAO,KACnEP,IAASD,EAAQD,EAASU,IAAI,SAAAC,GAAO,OACnCzD,EAAApB,EAAAqB,cAAA,WAASyD,IAAKD,EAAQE,KAClB3D,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,qBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,cAAcC,IAAI,gFAAgFE,IAAI,UAEzHL,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,gBACXF,EAAApB,EAAAqB,cAAA,UAAID,EAAApB,EAAAqB,cAAA,cAASwD,EAAQG,UAAU,IAAIH,EAAQI,WAC3C7D,EAAApB,EAAAqB,cAAA,8CAA+BD,EAAApB,EAAAqB,cAAA,SAAIwD,EAAQf,MAC3C1C,EAAApB,EAAAqB,cAAA,uBAAYwD,EAAQK,UAExB9D,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,eACXF,EAAApB,EAAAqB,cAAA,UAAQO,QAAS,kBAAMwB,EAAKS,WAAWgB,EAAQf,MAAMqB,SAAUN,EAAQO,SAAStC,KAAKuC,MAAM1E,aAAaQ,QAAQ,aAAhH,cAGRiD,GAAQD,EAAS/C,EAAApB,EAAAqB,cAAA,WAASyD,IAAKZ,EAASa,KACxC3D,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,qBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,cAAcC,IAAI,gFAAgFE,IAAI,UAEzHL,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,gBACXF,EAAApB,EAAAqB,cAAA,UAAID,EAAApB,EAAAqB,cAAA,cAAS6C,EAASc,UAAU,IAAId,EAASe,WAC7C7D,EAAApB,EAAAqB,cAAA,8CAA+BD,EAAApB,EAAAqB,cAAA,SAAI6C,EAASJ,MAC5C1C,EAAApB,EAAAqB,cAAA,uBAAY6C,EAASgB,UAEzB9D,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,eACXF,EAAApB,EAAAqB,cAAA,UAAQO,QAAS,kBAAMwB,EAAKS,WAAWK,EAASJ,MAAMqB,SAAUjB,EAASkB,SAAStC,KAAKuC,MAAM1E,aAAaQ,QAAQ,aAAlH,aAEMiD,GAAQD,EAAQ/C,EAAApB,EAAAqB,cAAA,MAAIS,GAAG,iBAAP,6CAAmE,KACjGV,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,WACXF,EAAApB,EAAAqB,cAAA,UAAQ8D,SAAmB,IAATd,IAAyB,IAAXF,EAAiBvC,QAASC,KAAKmB,MAAM7C,MAArE,YACAiB,EAAApB,EAAAqB,cAAA,UAAQ8D,SAAUd,IAASC,EAAYgB,OAAShB,EAAYiB,OAAOjB,EAAYkB,QAAoB,IAAXrB,EAAiBvC,QAASC,KAAKmB,MAAM5C,MAA7H,uBA3CD4B,aAkDbyD,6MACFC,MAAQ,CACJ5B,IAAK,GACL6B,SAAU,GACVX,UAAW,GACXC,SAAU,GACVG,OAAQtC,KAAKuC,MAAM1E,aAAaQ,QAAQ,YACxC+D,QAAS,GACTU,OAAQ,GACRrB,MAAM,EACNH,QAAQ,EACRyB,SAAS,EACTC,MAAM,KAGVC,iDAAa,SAAApG,EAAO4C,GAAP,IAAAyD,EAAA,OAAAjG,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTmC,EAAEG,iBAEFuD,EAAKP,MAAMnB,MAAO,EAClB0B,EAAKP,MAAMC,SAAWM,EAAKP,MAAM5B,IACjCmC,EAAKnF,cALIZ,EAAAE,KAAA,EAOcf,EAAIuD,IAAJ,aAAAC,OAAqBoD,EAAKP,MAAM5B,MAP9C,UASU,OATV5D,EAAAO,KASGC,KATH,CAAAR,EAAAE,KAAA,aAUF8F,MAAMD,EAAKP,MAAM5B,MAASmC,EAAKP,MAAMV,UAAUmB,MAAM,gBAAmBF,EAAKP,MAAMT,SAASkB,MAAM,gBAAmBF,EAAKP,MAAME,OAAOO,MAAM,kBAV3I,CAAAjG,EAAAE,KAAA,SAWD6F,EAAKP,MAAMnB,MAAK,EAChB0B,EAAKP,MAAMtB,QAAO,EAClB6B,EAAKP,MAAMG,SAAQ,EACnBI,EAAKP,MAAMI,MAAK,EAChBG,EAAKnF,cAfJZ,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAkBsBf,EAAIuD,IAAJ,WAAAC,OAAmBoD,EAAKP,MAAMN,SAlBpD,eAkBKtF,EAlBLI,EAAAO,KAmBDwF,EAAKP,MAAMR,QAAQpF,EAASY,KAAK0F,KAnBhClG,EAAAE,KAAA,GAoBKf,EAAIkB,KAAK,gBAAiB0F,EAAKP,OApBpC,eAAAxF,EAAAE,KAAA,GAqBKf,EAAIuD,IAAJ,cAAAC,OAAsB,IAAIoD,EAAKP,MAAM5B,MArB1C,QAsBDmC,EAAKP,MAAMnB,MAAK,EAChB0B,EAAKP,MAAMtB,QAAO,EAClB6B,EAAKP,MAAMG,SAAQ,EACnBI,EAAKnF,cACLuF,WAAWJ,EAAKjD,MAAMsD,MAAO,MA1B5B,QAAApG,EAAAE,KAAA,iBA8BL6F,EAAKP,MAAMnB,MAAK,EAChB0B,EAAKP,MAAMtB,QAAO,EAClB6B,EAAKnF,cAhCA,yBAAAZ,EAAAa,SAAApB,oIAoCJ,IAAA4G,EAAA1E,KACL,OACIT,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,aACXF,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,gBAAgBR,UAAU,iBAC9BF,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,QAAQM,QAASC,KAAKmB,MAAMsD,OAA5C,QACAlF,EAAApB,EAAAqB,cAAA,0CAECQ,KAAK6D,MAAMnB,KAAKnD,EAAApB,EAAAqB,cAACmD,EAAAxE,EAAD,CAAQwD,KAAK,YAAYiB,MAAM,QAAOC,OAAO,KAAKC,MAAM,OAAO9C,KAAK6D,MAAMtB,OAAOhD,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,4BAA2CD,KAAK6D,MAAMG,QAAQzE,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,+BAAiDD,KAAK6D,MAAMI,KAAK1E,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,mCAAkD,KAEnRV,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,YAAYgC,SAAU,SAAAf,GAAC,OAAIgE,EAAKR,WAAWxD,KACvDnB,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,kDACHD,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,MAAM0B,KAAK,OAAOE,UAAQ,EAACD,aAAa,MAAM+C,UAAU,IAAIC,UAAU,IAAIC,SAAU,SAAAnE,GAAC,OAAIgE,EAAKI,SAAS,CAAE7C,IAAKvB,EAAEqE,OAAOpG,SAASA,MAAOqB,KAAK6D,MAAM5B,OAC5J1C,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,+BACHD,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,QAAQ0B,KAAK,OAAOE,UAAQ,EAACD,aAAa,MAAMiD,SAAU,SAAAnE,GAAC,OAAIgE,EAAKI,SAAS,CAAE3B,UAAWzC,EAAEqE,OAAOpG,SAASA,MAAOqB,KAAK6D,MAAMV,aACxI5D,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,gCACHD,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,QAAQ0B,KAAK,OAAOE,UAAQ,EAACD,aAAa,MAAMiD,SAAU,SAAAnE,GAAC,OAAIgE,EAAKI,SAAS,CAAE1B,SAAU1C,EAAEqE,OAAOpG,SAASA,MAAOqB,KAAK6D,MAAMT,YACvI7D,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,6BACHD,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,KAAK0B,KAAK,OAAOE,UAAQ,EAACD,aAAa,MAAM+C,UAAU,KAAKC,UAAU,KAAKC,SAAU,SAAAnE,GAAC,OAAIgE,EAAKI,SAAS,CAAEf,OAAQrD,EAAEqE,OAAOpG,SAASA,MAAOqB,KAAK6D,MAAME,UAChKxE,EAAApB,EAAAqB,cAAA,UAAQmC,KAAK,UAAb,uBArEJxB,aA6EC6E,6MACjBnB,MAAQ,CACJxB,SAAU,GACVI,YAAa,GACbH,QAAQ,EACRC,QAAQ,EACRC,KAAM,EACNyC,KAAK,EACLvC,MAAM,EACNwC,SAAU,MAQdC,kCAAe,SAAAC,IAAA,IAAA5C,EAAAvE,EAAAoH,EAAAC,EAAA7C,EAAA8C,EAAAC,UAAA,OAAAtH,EAAAC,EAAAC,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAAOiE,EAAP+C,EAAAG,OAAA,QAAAC,IAAAJ,EAAA,GAAAA,EAAA,GAAc,EAAdE,EAAAlH,KAAA,EACYf,EAAIuD,IAAJ,kBAAAC,OAA0BwB,IADtC,OACLvE,EADKwH,EAAA7G,KAAAyG,EAEqBpH,EAASY,KAAjCyG,EAFGD,EAEHC,KAAS7C,EAFNmD,OAAAC,EAAA,EAAAD,CAAAP,EAAA,UAIXS,EAAKhB,SAAS,CAAEzC,SAAUiD,EAAM7C,cAAaD,OAAMD,OAAgC,IAAvBtE,EAASY,KAAK6G,OAAyBpD,QAAQ,EAAOI,MAAM,IAJ7G,wBAAA+C,EAAAvG,SAAAkG,QAOfW,SAAW,WAAM,IACLvD,EAASsD,EAAKjC,MAAdrB,KAER,GAAa,IAATA,EAAJ,CAEA,IAAMwD,EAAaxD,EAAO,EAC1BsD,EAAKX,aAAaa,OAGtBC,SAAW,WAAM,IAAAC,EACiBJ,EAAKjC,MAA3BrB,EADK0D,EACL1D,KAER,GAAIA,IAHS0D,EACCzD,YAEWgB,MAAzB,CAEA,IAAMuC,EAAaxD,EAAO,EAC1BsD,EAAKX,aAAaa,OAGtB1D,4BAAS,SAAA6D,IAAA,IAAAC,EAAAnE,EAAAhE,EAAAoI,EAAAf,EAAA7C,EAAA,OAAAvE,EAAAC,EAAAC,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UACLuH,EAAKjC,MAAMnB,MAAK,EAChBoD,EAAK7G,cACCmH,EAAa5H,SAASsC,eAAe,kBACrCmB,EAAMmE,EAAWzH,MACvByH,EAAWzH,MAAQ,IAEd0F,MAAMpC,IAAqB,IAAbA,EAAIyD,SAA4B,IAAbzD,EAAIyD,OAPrC,CAAAY,EAAA/H,KAAA,gBAAA+H,EAAA/H,KAAA,EAQsBf,EAAIuD,IAAJ,aAAAC,OAAqBiB,IAR3C,OAUkB,QAFbhE,EARLqI,EAAA1H,MAUWC,KACRiH,EAAKhB,SAAS,CAAEvC,OAA0B,MAAjBtE,EAASY,KAA0ByD,OAAe,KAANL,EAAsBS,MAAK,SAErEiD,IAAvB1H,EAASY,KAAKyG,KAClBQ,EAAKhB,SAAS,CAAEzC,SAAUpE,EAASY,KAAM2D,KAAM,EAAGD,OAA0B,MAAjBtE,EAASY,KAA0ByD,OAAe,KAANL,EAAsBS,MAAK,KAElI2D,EACgCpI,EAASY,KAAjCyG,EADRe,EACQf,KAAS7C,EADjBmD,OAAAC,EAAA,EAAAD,CAAAS,EAAA,UAEAP,EAAKhB,SAAS,CAAEzC,SAAUiD,EAAM7C,cAAaD,KAAM,EAAGD,OAA0B,MAAjBtE,EAASY,KAA0ByD,OAAe,KAANL,EAAsBS,MAAK,KAlBzI4D,EAAA/H,KAAA,iBAsBDgI,MAAM,+DACNT,EAAKjC,MAAMnB,MAAK,EAvBf,yBAAA4D,EAAApH,SAAAiH,QA2BTK,YAAc,YACU,IAAjBV,EAAKjC,MAAMoB,MACVa,EAAKX,eACLW,EAAK7G,eAGT6G,EAAKhB,SAAS,SAAA2B,GAAS,MAAK,CAAExB,KAAMwB,EAAUxB,UAIlD9F,OAAS,WACLL,aAAaM,WAAW,iBACxBN,aAAaM,WAAW,WACxBsH,cAAcZ,EAAKjC,MAAMqB,UACzBY,EAAK3E,MAAMC,QAAQC,KAAK,oBAG5BC,WAAa,WAEU,WADGxC,aAAaQ,QAAQ,kBACdwG,EAAK3E,MAAMC,QAAQC,KAAK,oBAGzDsF,cAAgB,SAACjG,GACC,UAAVA,EAAEuC,KAAiB6C,EAAKxD,6FA/E5BtC,KAAK6D,MAAMqB,SAAW0B,YAAY5G,KAAKsB,WAAY,KACnDtB,KAAKmF,gDAiFA,IAAA0B,EAAA7G,KAKL,OAJAlB,aAAaM,WAAW,OAExBY,KAAKsB,aAGD/B,EAAApB,EAAAqB,cAAA,WACID,EAAApB,EAAAqB,cAACsH,EAAD,MACAvH,EAAApB,EAAAqB,cAACuH,EAAA,gBAAD,KACIxH,EAAApB,EAAAqB,cAACuH,EAAA,OAAD,KACK,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACG1H,EAAApB,EAAAqB,cAAA,OAAKyH,MAAOA,EAAOxH,UAAU,eACzBF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,kBACXF,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,WACXF,EAAApB,EAAAqB,cAAA,SAAOS,GAAG,iBAAiB0B,KAAK,OAAOzB,YAAY,wBAAqBqE,KAAK,SAASK,UAAU,IAAIsC,UAAWL,EAAKF,gBACpHpH,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,YAAYM,QAAS8G,EAAKvE,QAAQ/C,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,kBACjEF,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,aAAaM,QAAS8G,EAAKL,aAA7C,mBAIRjH,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,UACXF,EAAApB,EAAAqB,cAAA,UAAQO,QAAS8G,EAAK1H,OAAQM,UAAU,aAAxC,YAA6DF,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,wBAOzFO,KAAK6D,MAAMoB,IAAI1F,EAAApB,EAAAqB,cAAC2H,EAAD,CAAO1C,MAAOzE,KAAKwG,cAAe,KAClDjH,EAAApB,EAAAqB,cAAC4H,EAAD,CAAMhF,OAAQpC,KAAK6D,MAAO3B,KAAMlC,KAAKmB,MAAMC,QAAS7C,KAAMyB,KAAKiG,SAAU3H,KAAM0B,KAAK+F,oBA5H/D5F,+CCvInCkH,EAAU,CACZ,CAAE1I,MAAO,YAAa2I,MAAO,aAC7B,CAAE3I,MAAO,QAAS2I,MAAO,SACzB,CAAE3I,MAAO,SAAU2I,MAAO,WAIxBC,6MACF1D,MAAQ,CACJ5B,IAAKhB,KAAKuC,MAAM1E,aAAaQ,QAAQ,QACrCkI,OAAQ,EACRC,IAAK,MAGTC,WAAa,CACTnD,KAAM,GACNoD,KAAM,QACNC,KAAM,MAGVC,QAAU,CAAC,GAAG,GAAG,GAAG,MAEpBC,aAAe,CAAC,GAAG,GAAG,GAAG,MAEzBC,MAAQ,CAAC,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QACxG,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,WAEzFC,6BAAU,SAAAlK,IAAA,IAAAmK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxK,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACNS,EAAK6E,MAAM2D,OAAO,EAClBxI,EAAKC,cACCgJ,EAAO,CAAC,GAAG,GAAG,GAAG,IACnBC,EAAM,EAJJC,GAAA,EAAAC,GAAA,EAAAC,OAAA1C,EAAAtH,EAAAC,KAAA,EAAAgK,EAKU,OALVI,OAAAC,YAAA,UAAAR,GAAAI,EAAAD,EAAA/J,QAAAqK,KAAA,CAAAvK,EAAAE,KAAA,SAKEiK,EALFD,EAAA5J,MAMM8J,EAAO,EANb,aAMgBA,EAAO,GANvB,CAAApK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAOyBf,EAAIuD,IAAJ,kBAAAC,OAA0B,IAAIhC,EAAK6E,MAAM5B,IAAzC,KAAAjB,OAAgDwH,EAAK,IAAIC,IAPlF,QAQqB,QADbxK,EAPRI,EAAAO,MAQcC,MACRoJ,EAAKC,GAAO7G,KAAKpD,EAASY,MAThC,QAM0B4J,IAN1BpK,EAAAE,KAAA,iBAYF2J,IAZE,QAAAC,GAAA,EAAA9J,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAwK,GAAAxK,EAAA,SAAA+J,GAAA,EAAAC,EAAAhK,EAAAwK,GAAA,QAAAxK,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAAA6J,GAAA,MAAAG,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAzK,EAAAC,KAAA,IAAA8J,EAAA,CAAA/J,EAAAE,KAAA,eAAA8J,EAAA,eAAAhK,EAAA0K,OAAA,mBAAA1K,EAAA0K,OAAA,YAcN/J,EAAK6I,QAAQI,EACbjJ,EAAK6E,MAAM4D,IAAI,GACfzI,EAAK6E,MAAM2D,OAAO,EAClBxI,EAAKC,cAjBC,yBAAAZ,EAAAa,SAAApB,EAAA,sCAoBVkL,yDAAqB,SAAA5D,EAAO6D,EAAUhJ,GAAjB,IAAAsE,EAAAqD,EAAAD,EAAAuB,EAAAC,EAAAC,EAAA1D,EAAA2D,EAAA,OAAAnL,EAAAC,EAAAC,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,OAMjB,GALMgG,EAAOtE,EAAGqJ,UAAU,GACpB1B,EAAO,GACPD,EAAOnJ,SAASsC,eAAeb,GAAItB,MACrCuK,EAAS,EAEC,OAAXD,EAAgB,CAEf,GADAjK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIxG,IAAI,SAASrC,GAAQA,EAAET,KAAKsE,IAAM2E,EAAO,KACvE,IAATA,EAAalK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIlI,KAAK,CAACpB,GAAIsE,EAAMiF,OAAQ,CAACP,EAAS,WACvF,GAAY,IAATC,EAEJ,IADAlK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIvK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIxG,IAAI,SAASrC,GAAK,OAAOA,EAAET,KAAOwJ,QAAQlF,IAAOiF,OAAO,GACpIL,EAAE,EAAEA,EAAEF,EAASvD,OAAOyD,IAC1BnK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIvK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIxG,IAAI,SAASrC,GAAK,OAAOA,EAAET,KAAOwJ,QAAQlF,IAAOiF,OAAOnI,KAAK4H,EAASE,IAGlKnK,EAAKC,mBAEJ,GAAc,OAAXgK,EAAgB,CACpB,IAAQE,EAAI,EAAGA,EAAInK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAI7D,OAAQyD,IAC5DnK,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIJ,GAAGlJ,KAAOsE,GACrDvF,EAAK8I,aAAa7H,EAAG,GAAGsJ,WAAW,GAAG,IAAIG,OAAOP,EAAG,GAG5DnK,EAAKC,cAvBQ,GA0BH,OAAXgK,GAA4B,UAATtB,EA1BL,CAAAlC,EAAAlH,KAAA,SA8Bb,IAHAS,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cACCyG,EAASuD,EAASvD,OAChByD,EAAE,EAAGA,EAAEzD,EAAQyD,IAAKvB,EAAKvG,KAAK4H,EAASrD,OAAO+D,KAAKV,GAAUE,IAAIxK,OA9B5D,OA+BbiH,OAAOgE,OAAO5K,EAAK0I,WAAY,CAACnD,OAAMoD,OAAMC,SA/B/BnC,EAAAlH,KAAA,GAgCPf,EAAIqM,IAAJ,kBAAA7I,OAA0B,IAAIhC,EAAK6E,MAAM5B,KAAMjD,EAAK0I,YAhC7C,QAiCb1I,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cAlCQwG,EAAAlH,KAAA,oBAoCE,OAAX0K,EApCS,CAAAxD,EAAAlH,KAAA,gBAqCbS,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cACL2G,OAAOgE,OAAO5K,EAAK0I,WAAY,CAACnD,OAAMoD,OAAMC,SAvC/BnC,EAAAlH,KAAA,GAwCPf,EAAIsM,OAAJ,kBAAA9I,OAA6B,IAAIhC,EAAK6E,MAAM5B,IAA5C,KAAAjB,OAAmDhC,EAAK0I,WAAWnD,OAxC5D,QAyCbvF,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cA1CQ,yBAAAwG,EAAAvG,SAAAkG,gEA8CrB2E,0DAAsB,SAAA5D,EAAOzF,EAAGT,GAAV,IAAA0H,EAAApD,EAAAqD,EAAAK,EAAAvC,EAAAyD,EAAA,OAAAjL,EAAAC,EAAAC,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UACZoJ,EAAOjH,EAAEqE,OAAOpG,MAChB4F,EAAOtE,EAAGqJ,UAAU,GACpB1B,EAAO,GAEI,KADXK,EAAOzJ,SAASwL,iBAAT,GAAAhJ,OAA6B,IAAIf,EAAjC,mBACLyF,QAAqB,UAAPiC,EALJ,CAAArB,EAAA/H,KAAA,SASd,IAHAS,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cACCyG,EAASuC,EAAKvC,OACZyD,EAAE,EAAGA,EAAEzD,EAAQyD,IAAKvB,EAAKvG,KAAK4G,EAAKkB,GAAGc,aAThC,OAUdrE,OAAOgE,OAAO5K,EAAK0I,WAAY,CAACnD,OAAMoD,OAAMC,SAV9BtB,EAAA/H,KAAA,GAWRf,EAAIqM,IAAJ,kBAAA7I,OAA0B,IAAIhC,EAAK6E,MAAM5B,KAAMjD,EAAK0I,YAX5C,QAYd1I,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cAbSqH,EAAA/H,KAAA,oBAeH,UAAPoJ,EAfU,CAAArB,EAAA/H,KAAA,gBAgBdS,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cACL2G,OAAOgE,OAAO5K,EAAK0I,WAAY,CAACnD,OAAMoD,OAAMC,SAlB9BtB,EAAA/H,KAAA,GAmBRf,EAAIsM,OAAJ,kBAAA9I,OAA6B,IAAIhC,EAAK6E,MAAM5B,IAA5C,KAAAjB,OAAmDhC,EAAK0I,WAAWnD,OAnB3D,QAoBdvF,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cArBS,yBAAAqH,EAAApH,SAAAiH,gEA0BtB+D,QAAU,SAACC,EAAQC,EAAQzC,GAGvB,IAFA,IAAMO,EAAQiC,EAAOZ,WAAW,GAAG,GAC7B7D,EAAS1G,EAAK6I,QAAQK,GAAOxC,OAC3ByD,EAAE,EAAGA,EAAEzD,EAAQyD,IACnB,GAAGnK,EAAK6I,QAAQK,GAAOiB,GAAGxB,OAAOA,GAAQ3I,EAAK6I,QAAQK,GAAOiB,GAAG5E,OAAO4F,EAAO,IAAIC,EAC9E,OAAO,EAGf,OAAO,KAGXC,WAAa,SAACF,EAAQC,GAClB,IAAMnC,EAAO,GACPC,EAAQiC,EAAOZ,WAAW,GAAG,GAEnC,GAAoB,IAAjBvK,EAAK6E,MAAM4D,KAC2B,IAAlCzI,EAAK8I,aAAaI,GAAOxC,OACxB,IAAI,IAAIyD,EAAE,EAAGA,EAAEnK,EAAK8I,aAAaI,GAAOxC,OAAQyD,IAC5C,GAAGnK,EAAK8I,aAAaI,GAAOiB,GAAGlJ,KAAKkK,EAAO,IAAIC,EAC3C,IAAI,IAAIjM,EAAE,EAAEA,EAAEa,EAAK8I,aAAaI,GAAOiB,GAAGK,OAAO9D,OAAOvH,IACpD8J,EAAK5G,KAAKrC,EAAK8I,aAAaI,GAAOiB,GAAGK,OAAOrL,IAOjE,GAAoB,IAAjBa,EAAK6E,MAAM4D,IAAQ,CAClBzI,EAAK6E,MAAM4D,MAEX,IADA,IAAM/B,EAAS1G,EAAK6I,QAAQK,GAAOxC,OAC3ByD,EAAE,EAAGA,EAAEzD,EAAQyD,IACnB,GAAGnK,EAAK6I,QAAQK,GAAOiB,GAAG5E,OAAO4F,EAAO,IAAIC,EACxC,IAAI,IAAIjM,EAAE,EAAGA,EAAEa,EAAK6I,QAAQK,GAAOiB,GAAGvB,KAAKlC,OAAQvH,IAC/C8J,EAAK5G,KAAKgG,EAAQA,EAAQtE,IAAI,SAASrC,GAAK,OAAOA,EAAE/B,QAAU8K,QAAQzK,EAAK6I,QAAQK,GAAOiB,GAAGvB,KAAKzJ,MAOnH,GAAiB,IAAd8J,EAAKvC,OACJ,GAAqC,IAAlC1G,EAAK8I,aAAaI,GAAOxC,OAAY1G,EAAK8I,aAAaI,GAAO7G,KAAK,CAACpB,GAAIkK,EAAO,IAAIC,EAAQZ,OAAQvB,QAClG,CACA,IAAIqC,GAAM,EAEV,GADAtL,EAAK8I,aAAaI,GAAOnF,IAAI,SAASrC,GAAQA,EAAET,KAAKkK,EAAO,IAAIC,IAAQE,GAAI,KACzEA,EAAI,CACH,IAAIC,EAAMvL,EAAK8I,aAAaI,GAAOnF,IAAI,SAASrC,GAAK,OAAOA,EAAET,KAAMwJ,QAAQU,EAAO,IAAIC,GACvFpL,EAAK8I,aAAaI,GAAOqC,GAAKf,OAAOvB,OAGrCjJ,EAAK8I,aAAaI,GAAO7G,KAAK,CAACpB,GAAIkK,EAAO,IAAIC,EAAQZ,OAAQvB,IAK1E,OAAOA,KAGXuC,UAAY,SAACL,GAET,IADA,IAAIM,EAAM,GADUC,EAAA,SAEXvB,GACLsB,EAAIpJ,KAAM9B,EAAApB,EAAAqB,cAAA,MAAIyD,IAAKkH,EAAOhB,GACd5J,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,QAAQQ,GAAI,KAAKkK,EAAO,IAAIhB,EAAGtE,SAAU,SAAAnE,GAAC,OAAI1B,EAAK+K,oBAAoBrJ,EAAG,KAAKyJ,EAAO,IAAIhB,KAA5G,IACInK,EAAK+I,MAAMhF,IAAI,SAACpE,EAAOuJ,GACnB,OAAO3I,EAAApB,EAAAqB,cAAA,UAAQyD,IAAKiF,EAAOyC,SAAyD,IAA/C3L,EAAK6I,QAAQsC,EAAOZ,WAAW,GAAG,IAAI7D,QAAW1G,EAAKkL,QAAQC,EAAOhB,EAAExK,IAAeA,QAI/I8L,EAAIpJ,KAAM9B,EAAApB,EAAAqB,cAAA,MAAIyD,IAAKkG,GACP5J,EAAApB,EAAAqB,cAACoL,EAAA,EAAD,CAAiBjM,MAAOK,EAAKqL,WAAWF,EAAQhB,GAAI0B,aAAa,EAAOC,SAAO,EAACzD,QAASA,EAAS5H,UAAU,qBAAqBoF,SAAU,SAAAnE,GAAC,OAAI1B,EAAKgK,mBAAmBtI,EAAG,KAAKyJ,EAAO,IAAIhB,IAAIlJ,GAAI,KAAKkK,EAAO,IAAIhB,OAT1NA,EAAI,EAAGA,EAAI,EAAGA,IAAKuB,EAAnBvB,GAYT,OAAOsB,KAGXM,aAAe,WACX/L,EAAK6E,MAAM2D,OAAS,EACpBxI,EAAKC,cACLuF,WAAW,kBAAMxF,EAAK8F,SAAS,CAAC0C,OAAQ,KAAK,yFAI7CxH,KAAKgI,2CAGA,IACGR,EAAWxH,KAAK6D,MAAhB2D,OACR,OACIjI,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,SACJV,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,UACM,IAATuH,EAAWjI,EAAApB,EAAAqB,cAACmD,EAAAxE,EAAD,CAAQwD,KAAK,YAAYiB,MAAM,QAAQC,OAAO,KAAKC,MAAM,OAAgB,IAAT0E,EAAWjI,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,sCAAkDV,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,iBAE7IV,EAAApB,EAAAqB,cAAA,aACID,EAAApB,EAAAqB,cAAA,aACID,EAAApB,EAAAqB,cAAA,MAAIS,GAAG,UACHV,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,qBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,sBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,oBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,oBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,mBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,uBACAD,EAAApB,EAAAqB,cAAA,kBACAD,EAAApB,EAAAqB,cAAA,sBAEJD,EAAApB,EAAAqB,cAAA,UAAKQ,KAAKwK,UAAU,MACpBjL,EAAApB,EAAAqB,cAAA,UAAKQ,KAAKwK,UAAU,MACpBjL,EAAApB,EAAAqB,cAAA,UAAKQ,KAAKwK,UAAU,MACpBjL,EAAApB,EAAAqB,cAAA,UAAKQ,KAAKwK,UAAU,OAExBjL,EAAApB,EAAAqB,cAAA,aACID,EAAApB,EAAAqB,cAAA,UACID,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAASD,EAAApB,EAAAqB,cAAA,WAC5GD,EAAApB,EAAAqB,cAAA,UAAID,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,OAAOM,QAA6B,IAApBC,KAAK6D,MAAM2D,OAAWxH,KAAK+K,aAAa,MAA1E,uBAtOZ5K,aAgPd6K,6MACFnH,MAAQ,CACJ5B,IAAKhB,KAAKuC,MAAM1E,aAAaQ,QAAQ,QACrC2L,KAAM,GACNC,IAAK,EACLC,IAAK,EACL3D,OAAQ,KAGZ4D,KAAO,CACH7K,KAAM,MAOV8K,6BAAU,SAAAC,IAAA,IAAAC,EAAAC,EAAArI,EAAAC,EAAA8H,EAAAC,EAAAM,EAAA,OAAAvN,EAAAC,EAAAC,KAAA,SAAAsN,GAAA,cAAAA,EAAApN,KAAAoN,EAAAnN,MAAA,UACNgD,EAAKsC,MAAM2D,OAAS,EACpBjG,EAAKtC,cAGO,WADGH,aAAaQ,QAAQ,iBAJ9B,CAAAoM,EAAAnN,KAAA,gBAAAmN,EAAAnN,KAAA,EAM6Bf,EAAIuD,IAAJ,YAAAC,OAAoBO,EAAKsC,MAAM5B,MAN5D,cAMIsJ,EANJG,EAAA9M,KAAA4M,EAOsCD,EAAiB1M,KAAlDsE,EAPLqI,EAOKrI,UAAWC,EAPhBoI,EAOgBpI,SAAU8H,EAP1BM,EAO0BN,IAAKC,EAP/BK,EAO+BL,IAP/BO,EAAAnN,KAAA,GAS8Bf,EAAIuD,IAAJ,kBAAAC,OAA0B,IAAIO,EAAKsC,MAAM5B,MATvE,QASIwJ,EATJC,EAAA9M,KAWF2C,EAAK6J,KAAK7K,KAAOkL,EAAkB5M,KAAK0B,KACxCgB,EAAKuD,SAAS,CAACmG,KAAK9H,EAAU,IAAIC,EAAU8H,MAAKC,MAAK3D,OAAQ,IAZ5D,yBAAAkE,EAAAxM,SAAAoM,QAgBVK,YAAc,SAAChN,GACX4C,EAAK6J,KAAK7K,KAAO5B,EACjB4C,EAAKtC,iBAGT2M,iDAAa,SAAAC,EAAOnL,GAAP,OAAAxC,EAAAC,EAAAC,KAAA,SAAA0N,GAAA,cAAAA,EAAAxN,KAAAwN,EAAAvN,MAAA,cACTgD,EAAKsC,MAAM2D,OAAS,EACpBjG,EAAKtC,cACLsC,EAAKoK,YAAYjL,EAAEqE,OAAOpG,OAHjBmN,EAAAvN,KAAA,EAIHf,EAAIqM,IAAJ,mBAAA7I,OAA2B,IAAIO,EAAKsC,MAAM5B,KAAOV,EAAK6J,MAJnD,OAKT7J,EAAKsC,MAAM2D,OAAS,EACpBjG,EAAKtC,cANI,wBAAA6M,EAAA5M,SAAA2M,8DASbd,aAAe,WACXxJ,EAAKsC,MAAM2D,OAAS,EACpBjG,EAAKtC,cACLuF,WAAW,kBAAMjD,EAAKuD,SAAS,CAAC0C,OAAQ,KAAK,yFApC7CxH,KAAKqL,2CAuCA,IAAAjH,EAAApE,KACEwH,EAAUxH,KAAK6D,MAAf2D,OACP,OACIjI,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QACJV,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,UACM,IAATuH,EAAWjI,EAAApB,EAAAqB,cAACmD,EAAAxE,EAAD,CAAQwD,KAAK,YAAYiB,MAAM,QAAQC,OAAO,KAAKC,MAAM,OAAgB,IAAT0E,EAAWjI,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,sCAAkDV,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,QAAR,iBAE7IV,EAAApB,EAAAqB,cAAA,YAAUS,GAAG,OAAOtB,MAAOqB,KAAKoL,KAAK7K,KAAMsE,SAAU,SAAAnE,GAAC,OAAI0D,EAAKwH,WAAWlL,MAC1EnB,EAAApB,EAAAqB,cAAA,UAAQC,UAAU,OAAOM,QAASC,KAAK+K,cAAvC,WACAxL,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,gBACJV,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,qBACJV,EAAApB,EAAAqB,cAAA,OAAKE,IAAKqM,IAAMnM,IAAI,UAExBL,EAAApB,EAAAqB,cAAA,OAAKS,GAAG,UACJV,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,cAAhB,2BAAyDO,KAAK6D,MAAM5B,KACvE1C,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,cAAhB,UAA2CO,KAAK6D,MAAMoH,MACzD1L,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,cAAhB,eAA8D,IAAjBO,KAAK6D,MAAMqH,IAAQ,sBAAoC,IAAjBlL,KAAK6D,MAAMqH,IAAQ,YAAY,YACrH3L,EAAApB,EAAAqB,cAAA,SAAGD,EAAApB,EAAAqB,cAAA,QAAMC,UAAU,cAAhB,WAA4CO,KAAK6D,MAAMsH,eAtE/DhL,aA8EE6L,6MACjB1K,WAAa,WAEU,WADGxC,aAAaQ,QAAQ,kBACdoF,EAAKvD,MAAMC,QAAQC,KAAK,0FAKrD,OADArB,KAAKsB,aAED/B,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,YACXF,EAAApB,EAAAqB,cAACgC,EAAD,CAASlB,KAAK,eAAeC,KAAK,uBAClChB,EAAApB,EAAAqB,cAAA,MAAIS,GAAG,SAAP,iCACAV,EAAApB,EAAAqB,cAACyM,EAAD,MACA1M,EAAApB,EAAAqB,cAAA,MAAIS,GAAG,SAAP,8BACAV,EAAApB,EAAAqB,cAAC0M,EAAD,cAdsB/L,aC1UjBgM,2LAEb,OACI5M,EAAApB,EAAAqB,cAAA,OAAK4M,MAAM,WACP7M,EAAApB,EAAAqB,cAAA,OAAKE,IAAKC,IAAMC,IAAI,gBACpBL,EAAApB,EAAAqB,cAAA,0EACAD,EAAApB,EAAAqB,cAAA,UAAID,EAAApB,EAAAqB,cAACK,EAAA,EAAD,CAAMC,GAAG,IAAIL,UAAU,WAAUF,EAAApB,EAAAqB,cAAA,KAAGC,UAAU,4BAA9C,+BANiBU,cCkBtBkM,EAdA,kBACX9M,EAAApB,EAAAqB,cAAC8M,EAAA,EAAD,KACI/M,EAAApB,EAAAqB,cAACK,EAAA,EAAD,KACIN,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,KACIhN,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,CAAOC,OAAK,EAAClM,KAAK,IAAImM,UAAW7O,IACjC2B,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,CAAOC,OAAK,EAAClM,KAAK,gBAAgBmM,UAAWjM,IAC7CjB,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,CAAOC,OAAK,EAAClM,KAAK,eAAemM,UAAWzH,IAC5CzF,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,CAAOC,OAAK,EAAClM,KAAK,yBAAyBmM,UAAWT,IACtDzM,EAAApB,EAAAqB,cAAC+M,EAAA,EAAD,CAAOE,UAAWN,QCPnBO,UANH,kBACVnN,EAAApB,EAAAqB,cAAA,OAAKC,UAAU,OACbF,EAAApB,EAAAqB,cAACmN,EAAD,SCMgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASzI,MACvB,2DCbN0I,IAASC,OAAO1N,EAAApB,EAAAqB,cAAC0N,EAAD,MAAS1O,SAASsC,eAAe,SD4H3C,kBAAmBqM,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b11740a4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({ baseURL: 'https://kristaapi.herokuapp.com/kristaApi/'});\r\n\r\nexport default api;","import React, { Component, useReducer } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../services/api';\r\nimport './styles.css';\r\nimport logo from '../../images/icon.png';\r\nimport { element } from 'prop-types';\r\n\r\nexport default class Home extends Component {\r\n    login = async () => {\r\n        let user = document.querySelector('#user');\r\n        let pass = document.querySelector('#pass');\r\n        const response = await api.post('/patients/log', {user: user.value, pass: pass.value});\r\n        user.value=\"\";\r\n        pass.value=\"\";\r\n        if(response.data!==\"\") localStorage.setItem('userLogged', \"logged\");\r\n        this.forceUpdate();\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('userLogged')\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        const userLogged = localStorage.getItem('userLogged');\r\n        return(\r\n            <div className=\"home\">\r\n                <div className=\"page-header\">\r\n                    <img src={logo} alt=\"krista logo\"/>\r\n                    <h1>Krista Health-Care</h1>\r\n                </div>\r\n                <div className=\"navigation\">\r\n                    <nav className=\"navbar navbar-inverse\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"navbar-header\">\r\n                                <a className=\"navbar-brand\">Krista Health-Care</a>\r\n                            </div>\r\n                            <ul className=\"nav navbar-nav navbar-right\">\r\n                                <li>   \r\n                                    <button className=\"dropbtn\"><Link to='' className=\"logBtn\">Contactos</Link></button>\r\n                                    <button className=\"dropbtn\"><Link to='/MedicalLogin' className=\"logBtn\">Área médica</Link></button>\r\n                                    {userLogged===\"logged\"\r\n                                        ?<span>\r\n                                            <button onClick={this.logout} id=\"login\">Logout</button>\r\n                                        </span>\r\n                                        :<span>\r\n                                            <input placeholder=\"username\" id=\"user\"></input>\r\n                                            <input placeholder=\"password\" id=\"pass\"></input>\r\n                                            <button onClick={this.login} id=\"login\">Login</button>\r\n                                        </span>\r\n                                    }\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\n\r\nconst BackBtn = ({ path , text}) =>\r\n    <div className=\"backBtn-component\">\r\n       <div className=\"backBtn-container\">\r\n            <Link to={path} className=\"backBtn\"><i className=\"fa fa-arrow-circle-left\"></i> {text}</Link>\r\n        </div> \r\n    </div>\r\n    \r\n\r\nexport default BackBtn;","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\n\r\nimport BackBtn from '../../components/backBtn';\r\nimport './styles.css';\r\n\r\nexport default class MedicalLogIn extends Component {    \r\n    log = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const medicalNumber = document.getElementById(\"nm\").value;\r\n        const password = document.getElementById(\"pw\").value;\r\n        document.getElementById(\"nm\").value = '';\r\n        document.getElementById(\"pw\").value = '';\r\n\r\n        const response = await api.get(`/doctors/${medicalNumber}`);\r\n        \r\n        if(response.data != null){\r\n            if(response.data.password === password){\r\n                localStorage.setItem('medicalLogged','logged');\r\n                localStorage.setItem('docInfo', JSON.stringify(medicalNumber));\r\n                this.props.history.push(\"/MedicalArea\");\r\n            } \r\n        }\r\n    };\r\n\r\n    checkLogin = () => {\r\n        const loggedStorage = localStorage.getItem('medicalLogged');\r\n        if(loggedStorage==='logged') this.props.history.push(\"/MedicalArea\");\r\n    }\r\n\r\n    render(){\r\n        this.checkLogin();\r\n\r\n        return(\r\n            <div className=\"medical-login\">\r\n                <BackBtn path='/' text=\"Página inicial\"/>\r\n                <div className=\"form-container\">\r\n                    <div className=\"blue-ball\">\r\n                        <h1>Área Médica</h1>\r\n                        <form className=\"medical-form\" onSubmit={e => this.log(e)}>\r\n                            <label forhtml=\"nm\">Número medico</label>\r\n                            <input id=\"nm\" type=\"text\" placeholder=\"Numero medico\" autoComplete=\"on\" required/>\r\n                            <label forhtml=\"pw\">Password</label>\r\n                            <input id=\"pw\" type=\"password\" placeholder=\"Password\" autoComplete=\"on\" required/>\r\n                            <button type=\"submit\">Entrar  <span className=\"glyphicon glyphicon-log-in\"></span></button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport { StickyContainer, Sticky } from 'react-sticky';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport './styles.css';\r\nimport logo from '../../images/icon.png'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return(\r\n            <div className=\"header\">\r\n                <h2><img src={logo} alt='Krista logo'/> Área médica</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass List extends Component {\r\n\r\n    goSchedule = (hsn) => {\r\n        localStorage.setItem('hsn', JSON.stringify(hsn));\r\n        this.props.hist.push(\"/MedicalArea/Schedules\");\r\n    }\r\n    \r\n    render() {\r\n        const {patients, search, exists, page, productInfo, load} = this.props.estado;\r\n\r\n        return(\r\n            <div className = \"patient-list\">\r\n                <h2>Pacientes</h2>\r\n                {load?<Loader type=\"ThreeDots\" color=\"green\"height=\"30\" width=\"30\"/>:null}\r\n                {(exists&&!search)?patients.map(patient => (    //existe mas nao e procura\r\n                    <article key={patient._id}>\r\n                        <div className=\"profile-container\">\r\n                            <img className=\"profile-pic\" src=\"http://icons.iconarchive.com/icons/icons8/ios7/512/Users-User-Male-2-icon.png\" alt=\"icon\"/>  \r\n                        </div>\r\n                        <div className=\"patient-info\">\r\n                            <h3><strong>{patient.firstName+' '+patient.lastName}</strong></h3>\r\n                            <p>Número do sistema de saúde: <u>{patient.hsn}</u></p>\r\n                            <p>Médico: {patient.docName}</p>\r\n                        </div>\r\n                        <div className=\"scheduleBtn\">\r\n                            <button onClick={() => this.goSchedule(patient.hsn)} disabled={patient.docNum!==JSON.parse(localStorage.getItem('docInfo'))}>Manage</button>\r\n                        </div>\r\n                    </article>\r\n                )):(exists&&search)?(<article key={patients._id}> \r\n                    <div className=\"profile-container\">\r\n                        <img className=\"profile-pic\" src=\"http://icons.iconarchive.com/icons/icons8/ios7/512/Users-User-Male-2-icon.png\" alt=\"icon\"/>  \r\n                    </div>\r\n                    <div className=\"patient-info\">\r\n                        <h3><strong>{patients.firstName+' '+patients.lastName}</strong></h3>\r\n                        <p>Número do sistema de saúde: <u>{patients.hsn}</u></p>\r\n                        <p>Médico: {patients.docName}</p>\r\n                    </div>\r\n                    <div className=\"scheduleBtn\">\r\n                        <button onClick={() => this.goSchedule(patients.hsn)} disabled={patients.docNum!==JSON.parse(localStorage.getItem('docInfo'))}>Manage</button>\r\n                    </div>\r\n                </article>):(!exists&&search)?<h4 id=\"pacient-error\">Nenhum paciente corresponde à pesquisa</h4>:null}\r\n                <div className=\"actions\">\r\n                    <button disabled={page === 1 || search === true} onClick={this.props.prev}>Anterior</button>\r\n                    <button disabled={page === productInfo.pages || productInfo.total<=productInfo.limit || search === true} onClick={this.props.next}>Próximo</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Modal extends Component {\r\n    state = {\r\n        hsn: '',\r\n        username: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        docNum: JSON.parse(localStorage.getItem('docInfo')),\r\n        docName: '',\r\n        boxNum: '',\r\n        load: false,\r\n        exists: false,\r\n        success: false,\r\n        erro: false\r\n    }\r\n\r\n    formSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        this.state.load = true;\r\n        this.state.username = this.state.hsn;\r\n        this.forceUpdate();\r\n\r\n        const response = await api.get(`/patients/${this.state.hsn}`);\r\n\r\n        if(response.data===null){\r\n            if(isNaN(this.state.hsn) || !this.state.firstName.match(/^[A-Za-z]+$/) || !this.state.lastName.match(/^[A-Za-z]+$/) || !this.state.boxNum.match(/^[A-Za-z0-9]+$/)) {\r\n                this.state.load=false;\r\n                this.state.exists=false;\r\n                this.state.success=false;\r\n                this.state.erro=true;\r\n                this.forceUpdate();\r\n            }\r\n            else{\r\n                const response = await api.get(`doctors/${this.state.docNum}`);\r\n                this.state.docName=response.data.name;\r\n                await api.post('/patients/new', this.state);\r\n                await api.get(`/schedules/${'u'+this.state.hsn}`);\r\n                this.state.load=false;\r\n                this.state.exists=false;\r\n                this.state.success=true;\r\n                this.forceUpdate();\r\n                setTimeout(this.props.close, 1650);\r\n            }  \r\n        }\r\n        else{\r\n            this.state.load=false;\r\n            this.state.exists=true;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"contentor\">\r\n                <div id=\"modal-content\" className=\"modal-content\">\r\n                    <span className=\"close\" onClick={this.props.close}>&times;</span>\r\n                    <h3>Informação do paciente</h3>\r\n            \r\n                    {this.state.load?<Loader type=\"ThreeDots\" color=\"green\"height=\"30\" width=\"30\"/>:this.state.exists?<div id=\"warn\">Paciente já existente</div>:this.state.success?<div id=\"succ\">Paciente criado com sucesso</div>:this.state.erro?<div id=\"erro\">Dados introduzidos inválidos</div>:null}\r\n\r\n                    <form className=\"data-form\" onSubmit={e => this.formSubmit(e)}>\r\n                        <p><label>Número do sistema de saúde:</label>\r\n                        <input id=\"hsn\" type=\"text\" required autoComplete=\"off\" minLength='9' maxLength='9' onChange={e => this.setState({ hsn: e.target.value})} value={this.state.hsn}/></p>\r\n                        <p><label>Primeiro nome:</label>\r\n                        <input id=\"fname\" type=\"text\" required autoComplete=\"off\" onChange={e => this.setState({ firstName: e.target.value})} value={this.state.firstName}/></p>\r\n                        <p><label>Último nome:</label>\r\n                        <input id=\"lname\" type=\"text\" required autoComplete=\"off\" onChange={e => this.setState({ lastName: e.target.value})} value={this.state.lastName}/></p>\r\n                        <p><label>ID da caixa:</label>\r\n                        <input id=\"bn\" type=\"text\" required autoComplete=\"off\" minLength='12' maxLength='12' onChange={e => this.setState({ boxNum: e.target.value})} value={this.state.boxNum}/></p>\r\n                        <button type=\"submit\">Adicionar</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class MedicalArea extends Component {\r\n    state = {\r\n        patients: [],\r\n        productInfo: {},\r\n        search: false,\r\n        exists: false,\r\n        page: 1,\r\n        new: false,\r\n        load: true,\r\n        interval: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.interval = setInterval(this.checkLogin, 5000);\r\n        this.loadPatients();\r\n    }\r\n\r\n    loadPatients = async (page = 1) => {\r\n        const response = await api.get(`/patients?page=${page}`);\r\n        const { docs, ...productInfo} = response.data;\r\n\r\n        this.setState({ patients: docs, productInfo, page, exists: (response.data.length===0)?false:true , search: false, load: false});\r\n    };\r\n\r\n    prevPage = () => {\r\n        const { page } = this.state;\r\n\r\n        if( page === 1) return;\r\n\r\n        const pageNumber = page - 1;\r\n        this.loadPatients(pageNumber);\r\n    };\r\n\r\n    nextPage = () => {\r\n        const { page, productInfo } = this.state;\r\n\r\n        if (page === productInfo.pages) return;\r\n\r\n        const pageNumber = page + 1;\r\n        this.loadPatients(pageNumber);\r\n    };\r\n\r\n    search = async () => {\r\n        this.state.load=true;\r\n        this.forceUpdate();\r\n        const inputField = document.getElementById(\"search-patient\");\r\n        const hsn = inputField.value; \r\n        inputField.value = '';\r\n\r\n        if((!isNaN(hsn) && hsn.length===9) || hsn.length===0){\r\n            const response = await api.get(`/patients/${hsn}`);\r\n\r\n            if(response.data===null){\r\n                this.setState({ exists: (response.data == null)?false:true, search: (hsn==='')?false:true, load:false });\r\n            }\r\n            else if(response.data.docs === undefined){\r\n                this.setState({ patients: response.data, page: 1, exists: (response.data == null)?false:true, search: (hsn==='')?false:true, load:false });\r\n            }\r\n            else{\r\n                const { docs, ...productInfo} = response.data;\r\n                this.setState({ patients: docs, productInfo, page: 1, exists: (response.data == null)?false:true, search: (hsn==='')?false:true, load:false });\r\n            }   \r\n        }\r\n        else{\r\n            alert('O valor introduzido tem de ser um número de 9 caracteres');\r\n            this.state.load=false\r\n        }\r\n    };\r\n\r\n    switchModal = () => {\r\n        if(this.state.new===true){\r\n            this.loadPatients();\r\n            this.forceUpdate();\r\n        }\r\n        \r\n        this.setState(prevState => ({ new: !prevState.new }));\r\n        \r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('medicalLogged');\r\n        localStorage.removeItem('docInfo');\r\n        clearInterval(this.state.interval);\r\n        this.props.history.push(\"/MedicalLogin\");\r\n    }\r\n\r\n    checkLogin = () => {\r\n        const loggedStorage = localStorage.getItem('medicalLogged');\r\n        if(loggedStorage!=='logged') this.props.history.push(\"/MedicalLogin\");\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') this.search()\r\n    }\r\n\r\n    render() {\r\n        localStorage.removeItem('hsn');\r\n\r\n        this.checkLogin();\r\n\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <StickyContainer>\r\n                    <Sticky>\r\n                        {({ style }) => \r\n                            <div style={style} className=\"medical-nav\">\r\n                                <div className=\"left-container\">\r\n                                    <div className=\"patient\">\r\n                                        <input id=\"search-patient\" type=\"text\" placeholder=\"Número de paciente\" name=\"search\" maxLength='9' onKeyDown={this.handleKeyDown}/>\r\n                                        <button className=\"searchBtn\" onClick={this.search}><i className=\"fa fa-search\"></i></button>\r\n                                        <button className=\"newPatient\" onClick={this.switchModal}>Novo Paciente</button>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                                <div className=\"logout\">\r\n                                    <button onClick={this.logout} className=\"logoutBtn\">Sign Out <i className=\"fa fa-sign-out\"></i></button>\r\n                                </div>\r\n                                \r\n                                \r\n                            </div>\r\n                        }\r\n                    </Sticky>\r\n                    {this.state.new?<Modal close={this.switchModal}/>:null}\r\n                    <List estado={this.state} hist={this.props.history} next={this.nextPage} prev={this.prevPage}/>\r\n                </StickyContainer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport api from '../../services/api';\r\nimport Loader from 'react-loader-spinner';\r\nimport CreatableSelect from 'react-select/creatable';\r\n\r\nimport './styles.css';\r\nimport User from '../../images/user.png';\r\n\r\nimport BackBtn from '../../components/backBtn';\r\n\r\nconst options = [\r\n    { value: 'Ben-u-ron', label: 'Ben-u-ron' },\r\n    { value: 'Aulin', label: 'Aulin' },\r\n    { value: 'Brufen', label: 'Brufen' }\r\n  ]\r\n\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        hsn: JSON.parse(localStorage.getItem('hsn')),\r\n        saving: 0,\r\n        qnt: 28\r\n    }\r\n\r\n    medication = {\r\n        name: '',\r\n        hour: '00h00',\r\n        meds: []\r\n    }\r\n\r\n    medList = [[],[],[],[]]\r\n\r\n    medicamentos = [[],[],[],[]]\r\n\r\n    hours = ['__h__','00h00','01h00','02h00','03h00','04h00','05h00','06h00','07h00','08h00','09h00','10h00','11h00','12h00',\r\n             '13h00','14h00','15h00','16h00','17h00','18h00','19h00','20h00','21h00','22h00','23h00'];\r\n\r\n    getMeds = async () => {\r\n        this.state.saving=1\r\n        this.forceUpdate()\r\n        const list = [[],[],[],[]]\r\n        var index=0;\r\n        for(let line of 'abcd'){\r\n            for(let column=0; column<7; column++){\r\n                const response = await api.get(`/schedules/med/${'u'+this.state.hsn}/${line+'_'+column}`);\r\n                if(response.data!==null){\r\n                    list[index].push(response.data);\r\n                }\r\n            }\r\n            index++;\r\n        }\r\n        this.medList=list\r\n        this.state.qnt=28\r\n        this.state.saving=0\r\n        this.forceUpdate();\r\n    }\r\n\r\n    getValuesMedSelect = async (newValue, id) => {\r\n        const name = id.substring(2);\r\n        const meds = [];\r\n        const hour = document.getElementById(id).value;\r\n        var change = 0;\r\n\r\n        if(newValue!==null){\r\n            this.medicamentos[id[2].charCodeAt(0)-97].map(function(e) { if(e.id===name) change=1 })\r\n            if(change===0){ this.medicamentos[id[2].charCodeAt(0)-97].push({id: name, option: [newValue[0]]}) }\r\n            else if(change===1) {\r\n                this.medicamentos[id[2].charCodeAt(0)-97][this.medicamentos[id[2].charCodeAt(0)-97].map(function(e) { return e.id; }).indexOf(name)].option=[]\r\n                for(let i=0;i<newValue.length;i++){\r\n                    this.medicamentos[id[2].charCodeAt(0)-97][this.medicamentos[id[2].charCodeAt(0)-97].map(function(e) { return e.id; }).indexOf(name)].option.push(newValue[i])\r\n                }\r\n            }\r\n            this.forceUpdate()\r\n        }\r\n        else if(newValue===null){\r\n            for(let i = 0; i < this.medicamentos[id[2].charCodeAt(0)-97].length; i++){ \r\n                if ( this.medicamentos[id[2].charCodeAt(0)-97][i].id === name) {\r\n                    this.medicamentos[id[2].charCodeAt(0)-97].splice(i, 1); \r\n                }\r\n            }\r\n            this.forceUpdate()\r\n        }\r\n\r\n        if(newValue!==null && hour !== '__h__'){\r\n            this.state.saving = 1;\r\n            this.forceUpdate();\r\n            const length = newValue.length;\r\n            for(let i=0; i<length; i++) meds.push(newValue[Object.keys(newValue)[i]].value);\r\n            Object.assign(this.medication, {name, hour, meds});\r\n            await api.put(`/schedules/med/${'u'+this.state.hsn}`,this.medication);\r\n            this.state.saving = 2;\r\n            this.forceUpdate();\r\n        }\r\n        else if(newValue===null){\r\n            this.state.saving = 1;\r\n            this.forceUpdate();\r\n            Object.assign(this.medication, {name, hour, meds});\r\n            await api.delete(`/schedules/med/${'u'+this.state.hsn}/${this.medication.name}`);\r\n            this.state.saving = 2;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    getValuesHourSelect = async (e, id) => {\r\n        const hour = e.target.value;\r\n        const name = id.substring(2);\r\n        const meds = [];\r\n        const list = document.querySelectorAll(`${'#'+id} .css-12jo7m5`);\r\n        if(list.length!==0 && hour!=='__h__'){\r\n            this.state.saving = 1;\r\n            this.forceUpdate();\r\n            const length = list.length;\r\n            for(let i=0; i<length; i++) meds.push(list[i].textContent);\r\n            Object.assign(this.medication, {name, hour, meds});\r\n            await api.put(`/schedules/med/${'u'+this.state.hsn}`,this.medication);\r\n            this.state.saving = 2;\r\n            this.forceUpdate();\r\n        }\r\n        else if(hour==='__h__'){\r\n            this.state.saving = 1;\r\n            this.forceUpdate();\r\n            Object.assign(this.medication, {name, hour, meds});\r\n            await api.delete(`/schedules/med/${'u'+this.state.hsn}/${this.medication.name}`);\r\n            this.state.saving = 2;\r\n            this.forceUpdate();\r\n        }\r\n        \r\n    };\r\n\r\n    disable = (letter, number, hour) => {\r\n        const index = letter.charCodeAt(0)-97;\r\n        const length = this.medList[index].length;\r\n        for(let i=0; i<length; i++){\r\n            if(this.medList[index][i].hour===hour && this.medList[index][i].name===letter+'_'+number){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n\r\n    selectMeds = (letter, number) => {\r\n        const list = [];\r\n        const index = letter.charCodeAt(0)-97;\r\n\r\n        if(this.state.qnt===0){\r\n            if(this.medicamentos[index].length!==0){\r\n                for(let i=0; i<this.medicamentos[index].length; i++){\r\n                    if(this.medicamentos[index][i].id===letter+'_'+number){\r\n                        for(let a=0;a<this.medicamentos[index][i].option.length;a++){\r\n                            list.push(this.medicamentos[index][i].option[a])\r\n                        }   \r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(this.state.qnt!==0){\r\n            this.state.qnt--\r\n            const length = this.medList[index].length;\r\n            for(let i=0; i<length; i++){\r\n                if(this.medList[index][i].name===letter+'_'+number){\r\n                    for(let a=0; a<this.medList[index][i].meds.length; a++){\r\n                        list.push(options[options.map(function(e) { return e.value; }).indexOf(this.medList[index][i].meds[a])])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        if(list.length!==0){\r\n            if(this.medicamentos[index].length===0) this.medicamentos[index].push({id: letter+'_'+number, option: list})\r\n            else{\r\n                var exs = false;\r\n                this.medicamentos[index].map(function(e) { if(e.id===letter+'_'+number) exs=true })\r\n                if(exs){\r\n                    let col = this.medicamentos[index].map(function(e) { return e.id} ).indexOf(letter+'_'+number)\r\n                    this.medicamentos[index][col].option=list;\r\n                }\r\n                else{\r\n                    this.medicamentos[index].push({id: letter+'_'+number, option: list})\r\n                }\r\n            }            \r\n        }\r\n\r\n        return list      \r\n    }\r\n\r\n    createRow = (letter) => {\r\n        let row = [];\r\n        for (let i = 0; i < 7; i++) {\r\n            row.push( <td key={letter+i}>{\r\n                        <select className=\"hours\" id={'h_'+letter+'_'+i} onChange={e => this.getValuesHourSelect(e, 'm_'+letter+'_'+i)}> {\r\n                            this.hours.map((value, index) => {\r\n                                return <option key={index} selected={this.medList[letter.charCodeAt(0)-97].length!==0?this.disable(letter,i,value):false}>{value}</option>\r\n                            })}\r\n                        </select>}\r\n                      </td> );\r\n            row.push( <td key={i}>\r\n                        <CreatableSelect value={this.selectMeds(letter, i)} isClearable={false} isMulti options={options} className=\"basic-multi-select\" onChange={e => this.getValuesMedSelect(e, 'h_'+letter+'_'+i)} id={'m_'+letter+'_'+i}/>\r\n                      </td> )\r\n          }\r\n        return row\r\n    }\r\n\r\n    activateLoad = () => {\r\n        this.state.saving = 1;\r\n        this.forceUpdate();\r\n        setTimeout(() => this.setState({saving: 2}), 1000);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getMeds();\r\n    }\r\n\r\n    render() {\r\n        const { saving } = this.state\r\n        return(\r\n            <div id=\"table\">\r\n                <div id=\"loader\">\r\n                    {saving===1?<Loader type=\"ThreeDots\" color=\"green\" height=\"30\" width=\"30\"/>:saving===2?<div id=\"succ\">Informação salva com sucesso</div>:<div id=\"wait\">Em espera...</div>}\r\n                </div>\r\n                <table>\r\n                    <tbody>\r\n                        <tr id=\"header\">\r\n                            <td>Hora</td>\r\n                            <td>Segunda</td>\r\n                            <td>Hora</td>\r\n                            <td>Terça</td>\r\n                            <td>Hora</td>\r\n                            <td>Quarta</td>\r\n                            <td>Hora</td>\r\n                            <td>Quinta</td>\r\n                            <td>Hora</td>\r\n                            <td>Sexta</td>\r\n                            <td>Hora</td>\r\n                            <td>Sábado</td>\r\n                            <td>Hora</td>\r\n                            <td>Domingo</td>\r\n                        </tr>\r\n                        <tr>{this.createRow('a')}</tr>\r\n                        <tr>{this.createRow('b')}</tr>\r\n                        <tr>{this.createRow('c')}</tr>\r\n                        <tr>{this.createRow('d')}</tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>\r\n                            <td><button className=\"save\" onClick={this.state.saving!==1?this.activateLoad:null}>Guardar</button></td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n} \r\n\r\nclass Info extends Component {\r\n    state = {\r\n        hsn: JSON.parse(localStorage.getItem('hsn')),\r\n        nome: '',\r\n        sex: 0,\r\n        age: 0,\r\n        saving: 0\r\n    }\r\n\r\n    info = {\r\n        text: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getInfo();\r\n    }\r\n\r\n    getInfo = async () => {\r\n        this.state.saving = 1;\r\n        this.forceUpdate();\r\n\r\n        const logged = localStorage.getItem('medicalLogged');\r\n        if(logged==='logged'){\r\n            const PatientsResponse = await api.get(`patients/${this.state.hsn}`);\r\n            const {firstName, lastName, sex, age} = PatientsResponse.data;\r\n\r\n            const SchedulesResponse = await api.get(`schedules/info/${'u'+this.state.hsn}`);\r\n\r\n            this.info.text = SchedulesResponse.data.text\r\n            this.setState({nome:firstName+' '+lastName, sex, age, saving: 0})\r\n        }        \r\n    }\r\n\r\n    updateState = (value) => {\r\n        this.info.text = value;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    updateInfo = async (e) => {\r\n        this.state.saving = 1;\r\n        this.forceUpdate();\r\n        this.updateState(e.target.value);\r\n        await api.put(`/schedules/info/${'u'+this.state.hsn}`, this.info);\r\n        this.state.saving = 2;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    activateLoad = () => {\r\n        this.state.saving = 1;\r\n        this.forceUpdate();\r\n        setTimeout(() => this.setState({saving: 2}), 500);\r\n    }\r\n\r\n    render() {\r\n        const {saving} = this.state\r\n        return(\r\n            <div id=\"info\">\r\n                <div id=\"loader\">\r\n                    {saving===1?<Loader type=\"ThreeDots\" color=\"green\" height=\"30\" width=\"30\"/>:saving===2?<div id=\"succ\">Informação salva com sucesso</div>:<div id=\"wait\">Em espera...</div>}\r\n                </div>\r\n                <textarea id=\"text\" value={this.info.text} onChange={e => this.updateInfo(e)}></textarea>\r\n                <button className=\"save\" onClick={this.activateLoad}>Guardar</button>\r\n                <div id=\"personalInfo\">\r\n                    <div id=\"userPic-container\">\r\n                        <img src={User} alt='user'/>\r\n                    </div>\r\n                    <div id=\"detail\">\r\n                        <p><span className=\"identifier\">Número de paciente: </span>{this.state.hsn}</p>\r\n                        <p><span className=\"identifier\">Nome: </span>{this.state.nome}</p>\r\n                        <p><span className=\"identifier\">Género: </span>{this.state.sex===0?'Não especificado':this.state.sex===1?'Masculino':'Feminino'}</p>\r\n                        <p><span className=\"identifier\">Idade: </span>{this.state.age}</p>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Schedule extends Component {\r\n    checkLogin = () => {\r\n        const loggedStorage = localStorage.getItem('medicalLogged');\r\n        if(loggedStorage!=='logged') this.props.history.push(\"/MedicalLogin\");\r\n    }\r\n\r\n    render() {\r\n        this.checkLogin();\r\n        return(\r\n            <div className=\"schedule\">\r\n                <BackBtn path=\"/MedicalArea\" text=\"Página anterior\"/>\r\n                <h3 id=\"title\">Horário da medicação</h3>\r\n                <Table />\r\n                <h3 id=\"title\">Informação médica</h3>\r\n                <Info />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles.css';\r\nimport logo from '../../images/icon.png'\r\n\r\nexport default class Default extends Component {\r\n    render() {\r\n        return(\r\n            <div class=\"default\">\r\n                <img src={logo} alt=\"krista logo\"/>\r\n                <h3>Lamentamos, mas não conseguimos encontrar a sua página</h3>\r\n                <h2><Link to='/' className=\"backBtn\"><i className=\"fa fa-arrow-circle-left\"></i> Página inicial</Link></h2>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport { CookiesProvider } from 'react-cookie';\r\nimport Home from './pages/home';\r\nimport MedicalLogIn from './pages/medicalLogin';\r\nimport MedicalArea from './pages/medicalArea';\r\nimport Schedule from './pages/schedule';\r\nimport Default from './pages/default';\r\n\r\nconst Routes = () => (\r\n    <CookiesProvider>\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/MedicalLogin' component={MedicalLogIn} />\r\n                <Route exact path='/MedicalArea' component={MedicalArea} />\r\n                <Route exact path='/MedicalArea/Schedules' component={Schedule} />\r\n                <Route component={Default} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    </CookiesProvider>\r\n);\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from './routes';\nimport './styles.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <Routes />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/icon.bebb9c00.png\";","module.exports = __webpack_public_path__ + \"static/media/user.4788048f.png\";"],"sourceRoot":""}